{"version":3,"sources":["RowInputs.js","Share.js","TableDisplay.js","Info.js","header.js","Loading.js","Error.js","App.js","index.js"],"names":["RowInputs","props","handleSubmit","bind","handleChange","event","this","handleInputChange","target","handleFormSubmit","onSubmit","className","htmlFor","type","name","id","placeholder","value","supplement","onChange","cost","servings","servingsPerDay","React","Component","Share","handleUpdate","handleDelete","handleShareSubmit","handleShareUpdate","handleShareDelete","summaryDescription","editable","checked","shareId","onClick","navigator","clipboard","writeText","shareUrl","TableDisplay","scope","rows","map","r","parseFloat","costPerDay","toFixed","editRow","total","Info","handleNew","handleFind","handleGet","handleNewShare","handleFindShare","handleGetShare","newShare","findShare","Header","Loading","Error","errorMsg","axios","require","config","App","state","loading","error","loadShare","makeApi","setState","populateShare","shareObj","description","v4","preventDefault","dailyCost","calculate","addNewRow","uid","baseUrl","share","document","getElementById","window","location","hostname","innerText","row","filter","getSum","push","sum","length","forEach","method","obj","param","data","handleResetError","JSON","stringify","url","process","headers","then","result","handleApiResponse","catch","err","console","log","message","finally","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0da14656.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass RowInputs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.props.handleInputChange(event.target);\r\n\r\n    }\r\n    handleSubmit(event) {\r\n        this.props.handleFormSubmit(event);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group m-1\">\r\n                        <label className='m-1' htmlFor=\"supplement\">Supplement</label>\r\n                        <input type=\"text\" className=\"form-control m-1\" name=\"supplement\" id=\"supplement\" placeholder=\"Enter supplement name\" value={this.props.supplement || ''} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='m-1' htmlFor=\"cost\">Cost</label>\r\n                        <input type=\"number\" className=\"form-control m-1\" name=\"cost\" id=\"cost\" placeholder=\"Enter cost of supplement\" value={this.props.cost || ''} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='m-1' htmlFor=\"servings\">Servings</label>\r\n                        <input type=\"number\" className=\"form-control m-1\" name=\"servings\" id=\"servings\" placeholder=\"Enter number of servings\" value={this.props.servings || ''} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className='m-1' htmlFor=\"servingsPerDay\">Servings per Day</label>\r\n                        <input type=\"number\" className=\"form-control m-1\" name=\"servingsPerDay\" id=\"servingsPerDay\" placeholder=\"Enter number of servings per day\" value={this.props.servingsPerDay || ''} onChange={this.handleChange} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary m-1\">Add Row</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default RowInputs;","import React from 'react';\r\nclass Share extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleUpdate = this.handleDelete.bind(this);\r\n    }\r\n    handleSubmit() {\r\n        this.props.handleShareSubmit();\r\n    }\r\n    handleChange(event) {\r\n        this.props.handleInputChange(event.target);\r\n    }\r\n\r\n    handleUpdate() {\r\n        this.props.handleShareUpdate();\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleShareDelete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        <label className='m-1' htmlFor=\"summaryDescription\">Supplement List Description</label>\r\n                        <input type=\"textarea\" className=\"form-control m-1\" name=\"summaryDescription\" id=\"summaryDescription\" placeholder=\"Anything to say about this list?\" value={this.props.summaryDescription || ''} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"form-check-input m-1\" type=\"checkbox\" name='editable' id=\"editable\" value={this.props.editable} checked={this.props.editable} onChange={this.handleChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"editable\">\r\n                            Should this list be editable?\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className='btn-toolbar'>\r\n                    {this.props.shareId === '' && (<button className=\"btn btn-primary m-1\" onClick={this.props.handleShareSubmit}>Create Shareable Link</button>)}\r\n                    <span className='m-1' id=\"shareId\" onClick={() => {navigator.clipboard.writeText(this.props.shareUrl)}}></span>\r\n                </div>\r\n                {this.props.shareId !== '' && (\r\n                    <div className='btn-toolbar'>\r\n                        <div>\r\n                            <button className=\"btn btn-warning m-1\" onClick={this.props.handleShareUpdate}>Update Shared List</button>\r\n                        </div>\r\n                        {this.props.editable && (\r\n                            <div>\r\n                                <button className=\"btn btn-danger m-1\" onClick={this.props.handleShareDelete}>Delete Share</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Share;","import React from 'react';\r\n\r\nclass TableDisplay extends React.Component {\r\n    render() {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Supplement</th>\r\n                        <th scope=\"col\">Cost</th>\r\n                        <th scope=\"col\">Number of Servings</th>\r\n                        <th scope=\"col\">Servings Per Day</th>\r\n                        <th scope=\"col\">Cost Per Day</th>\r\n                        <th scope=\"col\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id=\"tableBody\">\r\n                    {this.props.rows.map((r) => (\r\n                        <tr key={r.id} >\r\n                            <td>{r.supplement}</td>\r\n                            <td>{r.cost}</td>\r\n                            <td>{r.servings}</td>\r\n                            <td>{r.servingsPerDay}</td>\r\n                            <td>{parseFloat(r.costPerDay).toFixed(2)}</td>\r\n                            <td><button className=\"btn\" onClick={() => this.props.editRow(r)}>edit</button><button type=\"button\" className=\"btn\" aria-label=\"delete\" onClick={() => this.props.handleDelete(r.id)}>remove</button></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>Total: </td>\r\n                        <td>$ {parseFloat(this.props.total).toFixed(2)}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TableDisplay;","import React from 'react';\r\n\r\nclass Info extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleNew = this.handleNew.bind(this);\r\n        this.handleFind = this.handleFind.bind(this);\r\n        this.handleGet = this.handleGet.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleNew() {\r\n        this.props.handleNewShare();\r\n    }\r\n    handleFind() {\r\n        this.props.handleFindShare();\r\n    }\r\n    handleGet() {\r\n        this.props.handleGetShare();\r\n    }\r\n    handleChange(event) {\r\n        this.props.handleInputChange(event.target);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='m-1'>\r\n                    <h1>This calculates your daily expenditure on supplements</h1>\r\n                    <p>Enter in supplement cost information and click 'Add' to start your list</p>\r\n                    <p>Clicking 'Create Shareable Link' will save this information and it can be shared to anyone</p>\r\n                </div>\r\n                <div className='btn btn-group'>\r\n                    <div>\r\n                        <button className='btn btn-primary m-1' name='newShare' id='newShare' onClick={this.handleNew}>Create a New List</button>\r\n                    </div>\r\n                    <div>\r\n                        <button className='btn btn-primary m-1' name='findShare' id='findShare' onClick={this.handleFind}>Find a List</button>\r\n                    </div>\r\n                </div>\r\n                {!this.props.newShare && this.props.findShare &&\r\n                    <div>\r\n                        <label className='m-1' htmlFor=\"shareId\">Enter an Id</label>\r\n                        <input type=\"test\" className=\"form-control m-1\" name=\"shareId\" id=\"shareId\" placeholder=\"Enter an Id to pull up a shared supplement list\" value={this.props.shareId || ''} onChange={this.handleChange} />\r\n                        <button className='btn btn-primary m-1' name='getShare' id='getShare' onClick={this.handleGet}>Get This List</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;","const Header = () => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <span className=\"navbar-brand\">SuppCalc</span>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <p>LOADING...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","const Error = (props) => {\r\n    return (\r\n        <div className=\"error\">\r\n            <p>There was an error: {props.errorMsg}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import './App.css';\r\nimport React from 'react';\r\nimport RowInputs from './RowInputs';\r\nimport Share from './Share';\r\nimport TableDisplay from './TableDisplay';\r\nimport { v4 } from 'uuid';\r\nimport Info from './Info';\r\nimport Header from './header';\r\nimport Loading from './Loading';\r\nimport Error from './Error';\r\n\r\nconst axios = require('axios');\r\n\r\nrequire('dotenv').config();\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      supplement: '',\r\n      cost: 0,\r\n      servings: 0,\r\n      servingsPerDay: 0,\r\n      costPerDay: 0,\r\n      total: 0,\r\n      rows: [],\r\n      shareId: '',\r\n      shareUrl: '',\r\n      editable: true,\r\n      summaryDescription: '',\r\n      loading: false,\r\n      error: false,\r\n      errorMsg: '',\r\n      newShare: false,\r\n      loadShare: false,\r\n      findShare: false\r\n    }\r\n\r\n    this.makeApi.bind(this);\r\n  }\r\n\r\n  handleNewShare() {\r\n    this.setState({\r\n      supplement: '',\r\n      cost: 0,\r\n      servings: 0,\r\n      servingsPerDay: 0,\r\n      costPerDay: 0,\r\n      total: 0,\r\n      rows: [],\r\n      shareId: '',\r\n      editable: false,\r\n      summaryDescription: '',\r\n      newShare: true\r\n    })\r\n    this.populateShare('');\r\n  }\r\n\r\n  handleFindShare() {\r\n    this.setState({\r\n      supplement: '',\r\n      cost: 0,\r\n      servings: 0,\r\n      servingsPerDay: 0,\r\n      costPerDay: 0,\r\n      total: 0,\r\n      rows: [],\r\n      shareId: '',\r\n      editable: false,\r\n      summaryDescription: '',\r\n      newShare: false,\r\n      findShare: true\r\n    })\r\n    this.populateShare('');\r\n  }\r\n\r\n  handleShareSubmit() {\r\n    let shareObj = {};\r\n    shareObj.rows = this.state.rows;\r\n    shareObj.description = this.state.summaryDescription;\r\n    shareObj.editable = this.state.editable;\r\n    shareObj.id = v4();\r\n    //this will send to an API to create\r\n    this.makeApi('post', shareObj, '');\r\n    this.populateShare(shareObj.id);\r\n  }\r\n\r\n  handleShareUpdate() {\r\n    let shareObj = {};\r\n    shareObj.rows = this.state.rows;\r\n    shareObj.id = this.state.shareId;\r\n    shareObj.description = this.state.summaryDescription;\r\n    shareObj.editable = this.state.editable;\r\n    //this will send update to an API\r\n    this.makeApi('put', shareObj, shareObj.id);\r\n    //handle success    \r\n    this.populateShare(shareObj.id);\r\n  }\r\n\r\n  handleGetShare() {\r\n    let id = this.state.shareId;\r\n    this.makeApi('get', null, id);\r\n  }\r\n\r\n  handleShareDelete() {\r\n    let shareObj = {};\r\n    shareObj.id = this.state.shareId;\r\n    //this will send update to an API\r\n    this.makeApi('delete', null, shareObj.id);\r\n    //handle success\r\n  }\r\n\r\n  handleInputChange(target) {\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    let dailyCost = this.calculate();\r\n    //add a new row\r\n    this.addNewRow();\r\n    //total gets added\r\n    this.setState({\r\n      total: this.state.total + dailyCost,\r\n      supplement: '',\r\n      cost: 0,\r\n      servings: 0,\r\n      servingsPerDay: 0\r\n    });\r\n\r\n  }\r\n\r\n  handleResetError() {\r\n    this.setState({\r\n      error: false,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  populateShare(uid) {\r\n    let baseUrl;\r\n    let share = document.getElementById('shareId');\r\n    if (uid !== '') {\r\n      baseUrl = window.location.hostname;\r\n      share.innerText = `${baseUrl}/${uid}`;\r\n    }\r\n    this.setState({ shareId: uid });\r\n  }\r\n\r\n  editRow(row) {\r\n    //edit the row       \r\n    let rows = this.state.rows;\r\n    rows = rows.filter(r => r.id !== row.id);\r\n    this.setState({\r\n      supplement: row.supplement,\r\n      cost: row.cost,\r\n      servings: row.servings,\r\n      servingsPerDay: row.servingsPerDay,\r\n      rows: rows,\r\n      total: this.getSum(rows)\r\n    });\r\n  }\r\n\r\n  handleDelete(id) {\r\n    //delete the row\r\n    let rows = this.state.rows;\r\n    rows = rows.filter(r => r.id !== id);\r\n    this.setState({\r\n      rows: rows,\r\n      total: this.getSum(rows)\r\n    });\r\n  }\r\n\r\n  addNewRow() {\r\n    //TODO regex to get numbers in a better place validation wise?        \r\n    let rows = this.state.rows;\r\n    rows.push({\r\n      id: v4(),\r\n      supplement: this.state.supplement,\r\n      cost: this.state.cost,\r\n      servings: this.state.servings,\r\n      servingsPerDay: this.state.servingsPerDay,\r\n      costPerDay: this.calculate()\r\n    })\r\n    this.setState({ rows: rows });\r\n  }\r\n\r\n  calculate() {\r\n    let cost = parseFloat(this.state.cost);\r\n    let servings = parseFloat(this.state.servings);\r\n    let servingsPerDay = parseFloat(this.state.servingsPerDay);\r\n    return (cost / servings) * servingsPerDay;\r\n  }\r\n\r\n  getSum(rows) {\r\n    let sum = 0;\r\n    if (rows.length > 0) {\r\n      rows.forEach(r => sum = sum + r.costPerDay)\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  makeApi(method, obj, param) {\r\n    this.handleResetError();\r\n    let data;\r\n    if (obj !== null) {\r\n      data = JSON.stringify(obj);\r\n    }\r\n    let url = process.env.REACT_APP_BASEURL;\r\n    if (param !== '') {\r\n      url = `${url}/${param}`;\r\n    }\r\n    var config = {\r\n      method: method,\r\n      url: url,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    };\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    axios(config)\r\n      .then(result=> {\r\n        //handle Success\r\n        if (method === 'get') {\r\n          let data = result.data;\r\n          this.handleApiResponse(data);\r\n        }\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: err.message\r\n        });\r\n        //handle Error\r\n      }).finally(()=> {\r\n        this.setState({\r\n          loading: false,\r\n          loadShare: true\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n  handleApiResponse(data) {\r\n    if (data) {\r\n      let rows = data.rows.map(r => r = {\r\n        id: r.id,\r\n        supplement: r.supplement,\r\n        cost: r.cost,\r\n        servings: r.servings,\r\n        servingsPerDay: r.servingsPerDay,\r\n        costPerDay: r.costPerDay\r\n      });\r\n      this.setState({\r\n        editable: data.editable,\r\n        summaryDescription: data.description,\r\n        rows: rows,\r\n        total: this.getSum(rows)\r\n      });\r\n      this.populateShare(data.id);\r\n    }\r\n    //handle no data case\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        {this.state.error && <Error errorMsg={this.state.errorMsg} handleResetError={this.handleResetError.bind(this)} />}\r\n        <Info\r\n          handleNewShare={this.handleNewShare.bind(this)}\r\n          handleFindShare={this.handleFindShare.bind(this)}\r\n          handleGetShare={this.handleGetShare.bind(this)}\r\n          handleInputChange={this.handleInputChange.bind(this)}\r\n          shareId={this.state.shareId}\r\n          newShare={this.state.newShare}\r\n          loadShare={this.state.loadShare}\r\n          findShare={this.state.findShare}\r\n        />\r\n        {(this.state.loadShare || this.state.newShare) && <div>\r\n          <Share\r\n            rows={this.state.rows}\r\n            handleShareSubmit={this.handleShareSubmit.bind(this)}\r\n            handleInputChange={this.handleInputChange.bind(this)}\r\n            handleShareUpdate={this.handleShareUpdate.bind(this)}\r\n            handleShareDelete={this.handleShareDelete.bind(this)}\r\n            shareId={this.state.shareId}\r\n            shareUrl={this.state.shareUrl}\r\n            summaryDescription={this.state.summaryDescription}\r\n            editable={this.state.editable}\r\n          />\r\n          {!this.state.loading && <TableDisplay\r\n            total={this.state.total}\r\n            rows={this.state.rows}\r\n            editRow={this.editRow.bind(this)}\r\n            handleDelete={this.handleDelete.bind(this)}\r\n          />}\r\n          {this.state.loading && <Loading />}\r\n          {(this.state.editable || this.state.newShare) &&\r\n            <RowInputs handleInputChange={this.handleInputChange.bind(this)}\r\n              handleFormSubmit={this.handleFormSubmit.bind(this)}\r\n              supplement={this.state.supplement}\r\n              cost={this.state.cost}\r\n              servings={this.state.servings}\r\n              servingsPerDay={this.state.servingsPerDay}\r\n              costPerDay={this.state.costPerDay}\r\n            />\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}